import 'package:flutter/material.dart';
import 'package:konta_app/app/theme/extended_colors.dart';

class MaterialTheme {
  final TextTheme textTheme;

  const MaterialTheme(this.textTheme);

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff214fc7),
      surfaceTint: Color(0xff2854cc),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff4169e1),
      onPrimaryContainer: Color(0xfff8f7ff),
      secondary: Color(0xff505c8b),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffbdcaff),
      onSecondaryContainer: Color(0xff475482),
      tertiary: Color(0xff8b309b),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffa74bb6),
      onTertiaryContainer: Color(0xfffff5fa),
      error: Color(0xffbb0014),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffe22527),
      onErrorContainer: Color(0xfffffbff),
      surface: Color(0xfffaf8ff),
      onSurface: Color(0xff1a1b23),
      onSurfaceVariant: Color(0xff434654),
      outline: Color(0xff747685),
      outlineVariant: Color(0xffc4c5d6),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3038),
      inversePrimary: Color(0xffb6c4ff),
      primaryFixed: Color(0xffdce1ff),
      onPrimaryFixed: Color(0xff00164e),
      primaryFixedDim: Color(0xffb6c4ff),
      onPrimaryFixedVariant: Color(0xff003baf),
      secondaryFixed: Color(0xffdce1ff),
      onSecondaryFixed: Color(0xff091843),
      secondaryFixedDim: Color(0xffb8c4f9),
      onSecondaryFixedVariant: Color(0xff384571),
      tertiaryFixed: Color(0xffffd6ff),
      onTertiaryFixed: Color(0xff350040),
      tertiaryFixedDim: Color(0xfff8acff),
      onTertiaryFixedVariant: Color(0xff761987),
      surfaceDim: Color(0xffd9d9e3),
      surfaceBright: Color(0xfffaf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff3f2fd),
      surfaceContainer: Color(0xffededf7),
      surfaceContainerHigh: Color(0xffe8e7f2),
      surfaceContainerHighest: Color(0xffe2e1ec),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff002d8a),
      surfaceTint: Color(0xff2854cc),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff3c64dc),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff27345f),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff5e6b9a),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff600071),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffa246b1),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff730008),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffd71a21),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffaf8ff),
      onSurface: Color(0xff0f1118),
      onSurfaceVariant: Color(0xff333643),
      outline: Color(0xff4f5260),
      outlineVariant: Color(0xff6a6c7b),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3038),
      inversePrimary: Color(0xffb6c4ff),
      primaryFixed: Color(0xff3c64dc),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff194ac2),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff5e6b9a),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff465380),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xffa246b1),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff862b96),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffc6c6d0),
      surfaceBright: Color(0xfffaf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff3f2fd),
      surfaceContainer: Color(0xffe8e7f2),
      surfaceContainerHigh: Color(0xffdcdce6),
      surfaceContainerHighest: Color(0xffd1d1db),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff002473),
      surfaceTint: Color(0xff2854cc),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff003db4),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff1c2a55),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff3a4774),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff50005f),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff781c89),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff600005),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff98000e),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffaf8ff),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff000000),
      outline: Color(0xff292c38),
      outlineVariant: Color(0xff464956),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3038),
      inversePrimary: Color(0xffb6c4ff),
      primaryFixed: Color(0xff003db4),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff002a82),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff3a4774),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff23305c),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff781c89),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff5a006b),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffb8b8c2),
      surfaceBright: Color(0xfffaf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff0f0fa),
      surfaceContainer: Color(0xffe2e1ec),
      surfaceContainerHigh: Color(0xffd4d3de),
      surfaceContainerHighest: Color(0xffc6c6d0),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffb6c4ff),
      surfaceTint: Color(0xffb6c4ff),
      onPrimary: Color(0xff00287d),
      primaryContainer: Color(0xff4169e1),
      onPrimaryContainer: Color(0xfff8f7ff),
      secondary: Color(0xffb8c4f9),
      onSecondary: Color(0xff212e59),
      secondaryContainer: Color(0xff3a4774),
      onSecondaryContainer: Color(0xffaab6ea),
      tertiary: Color(0xfff8acff),
      onTertiary: Color(0xff570067),
      tertiaryContainer: Color(0xffa74bb6),
      onTertiaryContainer: Color(0xfffff5fa),
      error: Color(0xffffb4ac),
      onError: Color(0xff690006),
      errorContainer: Color(0xffff544b),
      onErrorContainer: Color(0xff2c0001),
      surface: Color(0xff11131a),
      onSurface: Color(0xffe2e1ec),
      onSurfaceVariant: Color(0xffc4c5d6),
      outline: Color(0xff8e909f),
      outlineVariant: Color(0xff434654),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e1ec),
      inversePrimary: Color(0xff2854cc),
      primaryFixed: Color(0xffdce1ff),
      onPrimaryFixed: Color(0xff00164e),
      primaryFixedDim: Color(0xffb6c4ff),
      onPrimaryFixedVariant: Color(0xff003baf),
      secondaryFixed: Color(0xffdce1ff),
      onSecondaryFixed: Color(0xff091843),
      secondaryFixedDim: Color(0xffb8c4f9),
      onSecondaryFixedVariant: Color(0xff384571),
      tertiaryFixed: Color(0xffffd6ff),
      onTertiaryFixed: Color(0xff350040),
      tertiaryFixedDim: Color(0xfff8acff),
      onTertiaryFixedVariant: Color(0xff761987),
      surfaceDim: Color(0xff11131a),
      surfaceBright: Color(0xff373941),
      surfaceContainerLowest: Color(0xff0c0e15),
      surfaceContainerLow: Color(0xff1a1b23),
      surfaceContainer: Color(0xff1e1f27),
      surfaceContainerHigh: Color(0xff282a31),
      surfaceContainerHighest: Color(0xff33343c),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffd3dbff),
      surfaceTint: Color(0xffb6c4ff),
      onPrimary: Color(0xff001f65),
      primaryContainer: Color(0xff668aff),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffd3dbff),
      onSecondary: Color(0xff15234e),
      secondaryContainer: Color(0xff828fc0),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xfffeccff),
      onTertiary: Color(0xff450052),
      tertiaryContainer: Color(0xffca6bd8),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffd2cd),
      onError: Color(0xff540004),
      errorContainer: Color(0xffff544b),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff11131a),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffdadbec),
      outline: Color(0xffafb1c1),
      outlineVariant: Color(0xff8d8f9f),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e1ec),
      inversePrimary: Color(0xff003cb2),
      primaryFixed: Color(0xffdce1ff),
      onPrimaryFixed: Color(0xff000d37),
      primaryFixedDim: Color(0xffb6c4ff),
      onPrimaryFixedVariant: Color(0xff002d8a),
      secondaryFixed: Color(0xffdce1ff),
      onSecondaryFixed: Color(0xff000d37),
      secondaryFixedDim: Color(0xffb8c4f9),
      onSecondaryFixedVariant: Color(0xff27345f),
      tertiaryFixed: Color(0xffffd6ff),
      onTertiaryFixed: Color(0xff24002c),
      tertiaryFixedDim: Color(0xfff8acff),
      onTertiaryFixedVariant: Color(0xff600071),
      surfaceDim: Color(0xff11131a),
      surfaceBright: Color(0xff43444c),
      surfaceContainerLowest: Color(0xff06070e),
      surfaceContainerLow: Color(0xff1c1d25),
      surfaceContainer: Color(0xff26272f),
      surfaceContainerHigh: Color(0xff31323a),
      surfaceContainerHighest: Color(0xff3c3d45),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffeeefff),
      surfaceTint: Color(0xffb6c4ff),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffb0c0ff),
      onPrimaryContainer: Color(0xff00082a),
      secondary: Color(0xffeeefff),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffb4c1f5),
      onSecondaryContainer: Color(0xff00082a),
      tertiary: Color(0xffffeafc),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xfff7a6ff),
      onTertiaryContainer: Color(0xff1b0021),
      error: Color(0xffffece9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffaea5),
      onErrorContainer: Color(0xff220001),
      surface: Color(0xff11131a),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffffffff),
      outline: Color(0xffeeefff),
      outlineVariant: Color(0xffc0c2d2),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e1ec),
      inversePrimary: Color(0xff003cb2),
      primaryFixed: Color(0xffdce1ff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffb6c4ff),
      onPrimaryFixedVariant: Color(0xff000d37),
      secondaryFixed: Color(0xffdce1ff),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffb8c4f9),
      onSecondaryFixedVariant: Color(0xff000d37),
      tertiaryFixed: Color(0xffffd6ff),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xfff8acff),
      onTertiaryFixedVariant: Color(0xff24002c),
      surfaceDim: Color(0xff11131a),
      surfaceBright: Color(0xff4e5058),
      surfaceContainerLowest: Color(0xff000000),
      surfaceContainerLow: Color(0xff1e1f27),
      surfaceContainer: Color(0xff2f3038),
      surfaceContainerHigh: Color(0xff3a3b43),
      surfaceContainerHighest: Color(0xff45464f),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }


  ThemeData theme(ColorScheme colorScheme) => ThemeData(
     useMaterial3: true,
     brightness: colorScheme.brightness,
     colorScheme: colorScheme,
     textTheme: textTheme.apply(
       bodyColor: colorScheme.onSurface,
       displayColor: colorScheme.onSurface,
     ),
     scaffoldBackgroundColor: colorScheme.background,
     canvasColor: colorScheme.surface,
  );

  List<ExtendedColor> get extendedColors => [
    success,
    warning,
    yellow,
    yellowOrange,
    orange,
    redOrange,
    red,
    redViolet,
    violet,
    blueViolet,
    blue,
    blueGreen,
    green,
    yellowGreen,
  ];
}
